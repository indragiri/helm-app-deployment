deployment:
  apiVersion: "apps/v1"
  type: "server"
  namespace: "default"
  replicas: 2
  baritoEnabled: "false"
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  livenessProbe:
    path: /ping
    initialDelaySeconds: 5
    timeoutSeconds: 1
  readinessProbe:
    path: /ping
    initialDelaySeconds: 5
    timeoutSeconds: 1
  containerPort: 8080
  sleepOnPreStopEnabled: false
  iap:
    enabled: false
    image: gojektech/iap-auth:0.1.0-99f7459df4481772d30176e3b39b3857cd538745
    containerPort: 8081
    refreshTimeSeconds: 3590s
    serviceAccountMountPath: /etc/iap_auth
    serviceAccountFileName: sa.json
    serviceAccountSecret: iap-credentials-secret
    logLevel: error
  telegraf:
    enabled: false
    image: asia.gcr.io/systems-0001/lens_telegraf:latest
    containerPort: 8125
    protocol: UDP
    args:
    command:
      - telegraf
    resources:
      limits: 
        cpu: 1000m
        memory: 1Gi
  consulAgent:
    enabled: false
    image: marketplace.gcr.io/google/consul:1.4
    serverHostname: "test.consul.com"
  dnsmasq:
    enabled: false
    image: "k8s.gcr.io/dns/k8s-dns-dnsmasq-nanny-amd64:1.16.0"
    containerPort: 53
    serverIP: 127.0.0.1
    serverPort: 8600
    
consulRegister:
  enabled: "false"
  containerName:
    enabled: "false"
application:
  entryPoint:
  command:
  migrationCommand:
    - bundle
    - exec
    - rake
    - db:migrate
job:
  enabled: false
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
configmap:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation
image:
   repository: asia.gcr.io/systems-0001
   bucketName: sample_app
   path: ""
   tag: 1.0.0-c06e9200ec06e2b8f698840351d17429668fcf05
   pullPolicy: IfNotPresent
resources:
  limits:
   cpu: 4000m
   memory: 16Gi
  requests:
   cpu: 100m
   memory: 128Mi
nodeSelector: {}
tolerations: []
affinity: {}
service:
  type: ClusterIP
  port: 80
  targetPort: http
  portName: http
  annotations: {}
ingress:
  apiVersion: "networking.k8s.io/v1beta1"
  enabled: false
  path:
    name: "/"
    enabled: false
  hostName: test-app.kube.golabs.io
  additionalHostNames: []
  target: cluster-name.contour.golabs.io
  annotations:
    kubernetes.io/ingress.class: contour
  tls:
    enabled: false
    secretName: example.com
  kongAdditionalConfig:
    enabled: false
    supportedProtocol: https
    httpsRedirectCode: 302
    lbAlgorithm: least-connections
    pluginName: goid-auth-proxy
    whitelistedPath: /ping 
hpa:
  enabled: false
 #minReplica: 2
 #maxReplica: 10
 #targetCPUUtilizationPercentage: 70
config:
 KUBERNETES_REPLICAS: ""
cron:
  enabled: false
  schedule: "* * * * *"
  entryPoint:
    - bundle
    - exec
    - rake
    - namespace:task
pdb:
  enabled: false
  minAvailableReplica: 4
volumeMounts: []
volumes: []
labels: {}
dnsPolicy: ClusterFirst
